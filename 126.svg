<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
  <style>
    svg { font-family: Arial, sans-serif; font-size: 16px; }
    a { color: blue; text-decoration: underline; cursor: pointer; display: block; margin: 2px 0; }
    a:hover { color: #551A8B; }
    a:visited { color: #309ef2; }
    .container {
      display: flex;
      flex-direction: column;
      gap: 4px;
      padding: 10px;
      box-sizing: border-box;
      height: 80vh;
      overflow-y: auto;
      border: 1px solid #ccc;
    }
    h1 { font-size: 28px; margin: 0 0 12px 0; color: black; }
    input {
      padding: 5px 8px;
      font-size: 16px;
      margin-left: 10px;
      width: 250px;
    }
    .controls {
      display: flex;
      align-items: center;
      margin-bottom: 10px;
    }
    .controls label {
      font-weight: bold;
    }
  </style>

  <foreignObject x="0" y="0" width="100%" height="100%">
    <body xmlns="http://www.w3.org/1999/xhtml">
      <h1>Bazinga Games</h1>

      <!-- Controls: search input -->
      <div class="controls">
        <label for="searchInput">Search:</label>
        <input type="text" id="searchInput" placeholder="Type to filter games..." />
      </div>

      <!-- Links container -->
      <div id="links" class="container"></div>

      <!-- Script to load JSON and create links -->
      <script>
        (async function() {
          const JSON_FILE = 'https://cdn.jsdelivr.net/gh/Calvin99Cooler/never@latest/zones.json';
          const HTML_URL = 'https://cdn.jsdelivr.net/gh/Calvin99Cooler/html@refs/heads/main/';
          try {
            const response = await fetch(JSON_FILE);
            const zones = await response.json();
            const container = document.getElementById('links');

            function renderLinks(filter = '') {
              container.innerHTML = '';
              zones.filter(zone => zone.name.toLowerCase().includes(filter.toLowerCase()))
                   .forEach(zone => {
                const link = document.createElement('a');
                link.textContent = zone.name;
                link.href = "#";
                link.addEventListener('click', async (e) => {
                  e.preventDefault();
                  let url = zone.url.replace('{HTML_URL}', HTML_URL);

                  const isExternalLink = url.startsWith('http') && !url.includes('cdn.jsdelivr.net/gh/Calvin99Cooler/html@refs/heads/main/');
                  if (isExternalLink) {
                    window.open(url, '_blank');
                    return;
                  }

                  try {
                    const htmlResponse = await fetch(url);
                    if (!htmlResponse.ok) throw new Error('File not found');
                    const htmlText = await htmlResponse.text();
                    const newTab = window.open('about:blank', '_blank');
                    newTab.document.write(htmlText);
                    newTab.document.close();
                  } catch (err) {
                    alert('Could not load HTML file: ' + url);
                    console.error(err);
                  }
                });
                container.appendChild(link);
              });
            }

            // Initial render
            renderLinks();

            // Dynamic search
            document.getElementById('searchInput').addEventListener('input', (e) => {
              renderLinks(e.target.value);
            });

          } catch (e) {
            const container = document.getElementById('links');
            const errorMsg = document.createElement('div');
            errorMsg.textContent = 'Failed to load games from JSON.';
            errorMsg.style.color = 'red';
            container.appendChild(errorMsg);
            console.error(e);
          }
        })();
      </script>
    </body>
  </foreignObject>
</svg>
