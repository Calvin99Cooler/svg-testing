<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
  <style>
    svg { font-family: Arial, sans-serif; font-size: 16px; }
    a { color: blue; text-decoration: underline; cursor: pointer; display: block; margin: 2px 0; }
    a:hover { color: #551A8B; }
    a:visited { color: #309ef2; }
    .container {
      display: flex;
      flex-direction: column;
      gap: 4px;
      padding: 10px;
      box-sizing: border-box;
      height: 80vh;
      overflow: hidden;
      border: 1px solid #ccc;
    }
    h1 { font-size: 28px; margin: 0 0 12px 0; color: black; }
    button {
      margin: 5px 5px 15px 5px;
      padding: 5px 10px;
      font-size: 16px;
      cursor: pointer;
    }
  </style>

  <foreignObject x="0" y="0" width="100%" height="100%">
    <body xmlns="http://www.w3.org/1999/xhtml">
      <h1>Bazinga Games</h1>

      <!-- Scroll buttons -->
      <div>
        <button onclick="document.getElementById('links').scrollBy(0, -100)">Up</button>
        <button onclick="document.getElementById('links').scrollBy(0, 100)">Down</button>
      </div>

      <!-- Links container -->
      <div id="links" class="container"></div>

      <!-- Script to load JSON and create links -->
      <script>
        (async function() {
          const JSON_FILE = 'https://cdn.jsdelivr.net/gh/Calvin99Cooler/never@latest/zones.json';
          const HTML_URL = 'https://cdn.jsdelivr.net/gh/Calvin99Cooler/html@refs/heads/main/';
          try {
            const response = await fetch(JSON_FILE);
            const zones = await response.json();
            const container = document.getElementById('links');

            zones.forEach(zone => {
              const link = document.createElement('a');
              link.textContent = zone.name;
              link.href = "#"; // prevent default navigation
              link.addEventListener('click', async (e) => {
                e.preventDefault();
                let url = zone.url.replace('{HTML_URL}', HTML_URL);
                try {
                  const htmlResponse = await fetch(url);
                  if (!htmlResponse.ok) throw new Error('File not found');
                  const htmlText = await htmlResponse.text();
                  const newTab = window.open('about:blank', '_blank');
                  newTab.document.write(htmlText);
                  newTab.document.close();
                } catch (err) {
                  alert('Could not load HTML file: ' + url);
                  console.error(err);
                }
              });
              container.appendChild(link);
            });
          } catch (e) {
            const container = document.getElementById('links');
            const errorMsg = document.createElement('div');
            errorMsg.textContent = 'Failed to load games from JSON.';
            errorMsg.style.color = 'red';
            container.appendChild(errorMsg);
            console.error(e);
          }
        })();
      </script>
    </body>
  </foreignObject>
</svg>
